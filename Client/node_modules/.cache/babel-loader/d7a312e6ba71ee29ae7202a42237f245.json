{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/WorkingArea.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass WorkingArea extends Component {\n  //TODO : ADD INTRODUCTION TO PROJECT\n  constructor() {\n    super();\n\n    this.NextImage = () => {\n      if (this.state.index > this.state.ImageNames.length - 2) {\n        console.log(\"end\");\n      } else {\n        this.state.index = this.state.index + 1;\n\n        if (this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\" + this.state.ImageNames[this.state.index];\n        }\n      }\n    };\n\n    this.PrevImage = () => {\n      if (this.state.index == 0) {\n        console.log(\"start\");\n      } else {\n        this.state.index = this.state.index - 1;\n\n        if (this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\" + this.state.ImageNames[this.state.index];\n        }\n      }\n    };\n\n    this.Apifuncgetimages = userName => {\n      // data is going to be the username\n      axios.post(\"http://localhost:8080/getimages\", userName).then(res => {\n        // then print response status\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"data\"]);\n        var ImageNames = res.data[\"data\"].split(\"</br>\");\n        ImageNames.pop();\n        this.state.ImageNames = ImageNames;\n\n        if (this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\" + this.state.ImageNames[this.state.index];\n        }\n      }).catch(err => {\n        // then print response status\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      index: 0\n    };\n  }\n\n  componentDidMount() {\n    // Call GO API to get all the image names of username\n    this.Apifuncgetimages(userName);\n  }\n\n  render() {\n    let index = this.state.index;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columnLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"name\",\n      ref: c => this.ImageTag = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"columnRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Right Side\", React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.NextImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"NEXT\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.PrevImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"PREVIOUS\")));\n  }\n\n}\n\nexport default WorkingArea;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/WorkingArea.js"],"names":["React","Component","axios","WorkingArea","constructor","NextImage","state","index","ImageNames","length","console","log","ImageTag","src","PrevImage","Apifuncgetimages","userName","post","then","res","data","split","pop","catch","err","componentDidMount","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass WorkingArea extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\nconstructor(){\n  super();\n  this.state= {\n    index:0,\n  }\n}\n\nNextImage= () => {\n  if(this.state.index>this.state.ImageNames.length-2)\n  {\n    console.log(\"end\")\n  }\n  else {\n  this.state.index = this.state.index + 1\n  if(this.ImageTag) {\n   this.ImageTag.src = \"http://localhost:4000/img/\"+this.state.ImageNames[this.state.index];\n    }\n  }\n}\n\n\nPrevImage= () => {\n  if(this.state.index == 0)\n  {\n    console.log(\"start\")\n  }\n  else {\n  this.state.index = this.state.index - 1\n  if(this.ImageTag) {\n   this.ImageTag.src = \"http://localhost:4000/img/\"+this.state.ImageNames[this.state.index];\n    }\n  }\n}\n\n\nApifuncgetimages = (userName) => {\n  // data is going to be the username\n  axios.post(\"http://localhost:8080/getimages\",userName)\n    .then(res => { // then print response status\n      console.log(\"API : \")\n      console.log(res)\n      console.log(res.data[\"data\"])\n       var ImageNames = res.data[\"data\"].split(\"</br>\");\n       ImageNames.pop();\n       this.state.ImageNames = ImageNames\n         if(this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\"+this.state.ImageNames[this.state.index];\n       }\n    })\n    .catch(err => { // then print response status\n    console.log(\"fail\")\n    console.log(err)\n    })\n  }\n\ncomponentDidMount(){\n    // Call GO API to get all the image names of username\n    this.Apifuncgetimages(userName)\n}\n  render() {\n    let { index } =this.state\n\n    return (\n      <div>\n      <div className = \"columnLeft\">\n        <img className='name' ref = {c => this.ImageTag = c}/>\n        </div>\n\n        <div className = \"columnRight\">\n      Right Side\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.NextImage}>NEXT</button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.PrevImage}>PREVIOUS</button>\n      </div>\n\n      </div>\n    );\n  }\n}\nexport default WorkingArea;\n"]},"metadata":{},"sourceType":"module"}