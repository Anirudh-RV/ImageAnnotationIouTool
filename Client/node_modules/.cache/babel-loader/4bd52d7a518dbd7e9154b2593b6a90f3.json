{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/TestAPI.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nclass TestAPI extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testpromises2 = () => {\n      function one(callback) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            console.log(\"first function executed\");\n            this.DataRetrieved.innerHTML = \"first function executed\";\n            resolve();\n          }, 3000);\n        });\n      }\n\n      function two() {\n        console.log(\"second function executed\");\n      }\n\n      one().then(two);\n    };\n\n    this.testpromises1 = () => {\n      let myFirstPromise = new Promise((resolve, reject) => {\n        // We call resolve(...) when what we were doing asynchronously was successful, and reject(...) when it failed.\n        // In this example, we use setTimeout(...) to simulate async code.\n        // In reality, you will probably be using something like XHR or an HTML5 API.\n        setTimeout(function () {\n          resolve(\"Success!\"); // Yay! Everything went well!\n        }, 250);\n      });\n      myFirstPromise.then(successMessage => {\n        // successMessage is whatever we passed in the resolve(...) function above.\n        // It doesn't have to be a string, but if it is only a succeed message, it probably will be.\n        console.log(\"Yay! \" + successMessage);\n        this.DataRetrieved.innerHTML = \"Yay! \" + successMessage;\n      });\n    };\n\n    this.testApifuncvalidateuser = () => {\n      var data = \"Email,anirudh@gmail.com\";\n      console.log(\"inside the testApifuncvalidateuser function : \");\n      axios.post(\"http://localhost:8080/validateinfo\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testApifunccheckuser = () => {\n      var data = \"anirudhrv,password\";\n      console.log(\"inside the testApifunccheckuser function : \");\n      axios.post(\"http://localhost:8080/checkuser\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testApifuncPost = () => {\n      console.log(\"inside the testApifuncPost function : \");\n      axios.post(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncGet = () => {\n      console.log(\"inside the testApifuncGet function : \");\n      axios.get(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncPut = () => {\n      console.log(\"inside the testApifuncPut function : \");\n      axios.put(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncDelete = () => {\n      console.log(\"inside the testApifuncDelete function : \");\n      axios.delete(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncdeleteuser = () => {\n      var name = \"profoak\";\n      console.log(\"inside the testApifuncdeleteuser function : \");\n      axios.post(\"http://localhost:8080/deleteuser\", name).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncinsertimagedata = () => {\n      // send only strings\n      var data = \"profoak,frontend1,frontend2,frontend3\";\n      console.log(\"inside the testApifuncinsertimagedata function : \");\n      axios.post(\"http://localhost:8080/insertimagedata\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testApifuncgetimages = () => {\n      // data is going to be the username\n      var data = \"user1\";\n      console.log(\"inside the testApifuncgetimages function : \");\n      axios.post(\"http://localhost:8080/getimages\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"data\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"data\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"TESTING API, check developer tools for console.\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \" CALL POST \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncGet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \" CALL GET \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncPut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" CALL PUT \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"  CALL DELETE\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncinsertimagedata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \" CALL insertimagedata \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncgetimages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \" CALL getimages \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncdeleteuser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"  DELETE USER (change name in API CALL-incode)\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifunccheckuser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"  CHECK USER \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncvalidateuser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"  Validate Info \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testpromises1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"  Test promises1 \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testpromises2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"  Test promises2 \"), React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TestAPI;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/TestAPI.js"],"names":["React","Component","axios","TestAPI","testpromises2","one","callback","Promise","resolve","reject","setTimeout","console","log","DataRetrieved","innerHTML","two","then","testpromises1","myFirstPromise","successMessage","testApifuncvalidateuser","data","post","res","catch","err","testApifunccheckuser","testApifuncPost","testApifuncGet","get","testApifuncPut","put","testApifuncDelete","delete","testApifuncdeleteuser","name","testApifuncinsertimagedata","testApifuncgetimages","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAIhCG,aAJgC,GAIhB,MAAK;AACnB,eAASC,GAAT,CAAaC,QAAb,EAAuB;AACvB,eAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CC,UAAAA,UAAU,CAAC,YAAW;AACpBC,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,iBAAKC,aAAL,CAAmBC,SAAnB,GAA+B,yBAA/B;AAEAN,YAAAA,OAAO;AACR,WALS,EAKP,IALO,CAAV;AAMD,SAPM,CAAP;AAQD;;AAED,eAASO,GAAT,GAAe;AACbJ,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;;AACDP,MAAAA,GAAG,GAAGW,IAAN,CAAWD,GAAX;AACC,KApB+B;;AAAA,SAqBhCE,aArBgC,GAqBhB,MAAK;AAEnB,UAAIC,cAAc,GAAG,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtD;AACA;AACA;AACAC,QAAAA,UAAU,CAAE,YAAW;AACrBF,UAAAA,OAAO,CAAC,UAAD,CAAP,CADqB,CACA;AACtB,SAFS,EAEP,GAFO,CAAV;AAGD,OAPsB,CAArB;AASFU,MAAAA,cAAc,CAACF,IAAf,CAAqBG,cAAD,IAAoB;AACtC;AACA;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUO,cAAtB;AACA,aAAKN,aAAL,CAAmBC,SAAnB,GAA+B,UAAQK,cAAvC;AACD,OALD;AAOC,KAvC+B;;AAAA,SAyChCC,uBAzCgC,GAyCN,MAAK;AAC7B,UAAIC,IAAI,GAAG,yBAAX;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACAV,MAAAA,KAAK,CAACoB,IAAN,CAAW,oCAAX,EAAgDD,IAAhD,EACGL,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACC,OAfH;AAgBD,KA5D+B;;AAAA,SA6DhCC,oBA7DgC,GA6DT,MAAK;AAC1B,UAAIL,IAAI,GAAG,oBAAX;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACAV,MAAAA,KAAK,CAACoB,IAAN,CAAW,iCAAX,EAA6CD,IAA7C,EACGL,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACC,OAfH;AAgBD,KAhF+B;;AAAA,SAkFhCE,eAlFgC,GAkFd,MAAM;AACtBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAV,MAAAA,KAAK,CAACoB,IAAN,CAAW,wBAAX,EACGN,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,OAdH;AAeC,KAnG6B;;AAAA,SAsG9BgB,cAtG8B,GAsGb,MAAM;AACrBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACAV,MAAAA,KAAK,CAAC2B,GAAN,CAAU,wBAAV,EACGb,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,OAdH;AAeC,KAvH2B;;AAAA,SA0H5BkB,cA1H4B,GA0HX,MAAM;AACrBnB,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACAV,MAAAA,KAAK,CAAC6B,GAAN,CAAU,wBAAV,EACGf,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,OAdH;AAeC,KA3IyB;;AAAA,SA6I1BoB,iBA7I0B,GA6IN,MAAM;AACxBrB,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAV,MAAAA,KAAK,CAAC+B,MAAN,CAAa,wBAAb,EACGjB,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,OAdH;AAeC,KA9JuB;;AAAA,SAgK1BsB,qBAhK0B,GAgKF,MAAM;AAC5B,UAAIC,IAAI,GAAG,SAAX;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAV,MAAAA,KAAK,CAACoB,IAAN,CAAW,kCAAX,EAA8Ca,IAA9C,EACGnB,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,OAdH;AAeC,KAlLuB;;AAAA,SAoLxBwB,0BApLwB,GAoLK,MAAM;AACjC;AACA,UAAIf,IAAI,GAAG,uCAAX;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAV,MAAAA,KAAK,CAACoB,IAAN,CAAW,uCAAX,EAAmDD,IAAnD,EACGL,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACC,OAfH;AAgBC,KAxMqB;;AAAA,SA2MtBY,oBA3MsB,GA2MC,MAAM;AAC3B;AACA,UAAIhB,IAAI,GAAG,OAAX;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACAV,MAAAA,KAAK,CAACoB,IAAN,CAAW,iCAAX,EAA6CD,IAA7C,EACGL,IADH,CACQO,GAAG,IAAI;AAAE;AACb;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACF,IAAJ,CAAS,MAAT,CAAZ;;AACA,YAAG,KAAKR,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BS,GAAG,CAACF,IAAJ,CAAS,MAAT,CAA/B;AACF;AAEA,OAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACC,OAfH;AAgBC,KA/NmB;AAAA;;AAmO9Ba,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAUA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKX,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVA,EAWA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXA,EAYA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKE,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZA,EAaA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKE,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfA,EAsBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKI,0BAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAtBA,EAuBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKC,oBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvBA,EAwBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKH,qBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAxBA,EAyBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKR,oBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAzBA,EA0BA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKN,uBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA1BA,EA2BA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKH,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA3BA,EA4BA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKb,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA5BA,EA8BA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAqB,MAAA,GAAG,EAAImC,CAAC,IAAI,KAAK1B,aAAL,GAAqB0B,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BA,CADF;AAmCD;;AAvQ6B;;AAyQhC,eAAepC,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass TestAPI extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\n\ntestpromises2 = () =>{\n  function one(callback) {\n  return new Promise(function(resolve, reject) {\n    setTimeout(function() {\n      console.log(\"first function executed\");\n      this.DataRetrieved.innerHTML = \"first function executed\";\n\n      resolve();\n    }, 3000);\n  })\n}\n\nfunction two() {\n  console.log(\"second function executed\");\n}\none().then(two)\n}\ntestpromises1 = () =>{\n\n  let myFirstPromise = new Promise((resolve, reject) => {\n  // We call resolve(...) when what we were doing asynchronously was successful, and reject(...) when it failed.\n  // In this example, we use setTimeout(...) to simulate async code.\n  // In reality, you will probably be using something like XHR or an HTML5 API.\n  setTimeout( function() {\n    resolve(\"Success!\")  // Yay! Everything went well!\n  }, 250)\n})\n\nmyFirstPromise.then((successMessage) => {\n  // successMessage is whatever we passed in the resolve(...) function above.\n  // It doesn't have to be a string, but if it is only a succeed message, it probably will be.\n  console.log(\"Yay! \" + successMessage)\n  this.DataRetrieved.innerHTML = \"Yay! \"+successMessage;\n});\n\n}\n\ntestApifuncvalidateuser = () =>{\n  var data = \"Email,anirudh@gmail.com\"\n  console.log(\"inside the testApifuncvalidateuser function : \")\n  axios.post(\"http://localhost:8080/validateinfo\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\ntestApifunccheckuser = () =>{\n  var data = \"anirudhrv,password\"\n  console.log(\"inside the testApifunccheckuser function : \")\n  axios.post(\"http://localhost:8080/checkuser\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ntestApifuncPost = () => {\n  console.log(\"inside the testApifuncPost function : \")\n  axios.post(\"http://localhost:8080/\")\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    })\n  }\n\n\n  testApifuncGet = () => {\n    console.log(\"inside the testApifuncGet function : \")\n    axios.get(\"http://localhost:8080/\")\n      .then(res => { // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \")\n        console.log(res)\n        console.log(res.data[\"message\"])\n        if(this.DataRetrieved) {\n         this.DataRetrieved.innerHTML = res.data[\"message\"];\n      }\n\n      })\n      .catch(err => { // then print response status\n      //  toast.error('upload fail')\n      console.log(\"fail\")\n      })\n    }\n\n\n    testApifuncPut = () => {\n      console.log(\"inside the testApifuncPut function : \")\n      axios.put(\"http://localhost:8080/\")\n        .then(res => { // then print response status\n          //toast.success('upload success')\n          console.log(\"API : \")\n          console.log(res)\n          console.log(res.data[\"message\"])\n          if(this.DataRetrieved) {\n           this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n\n        })\n        .catch(err => { // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\")\n        })\n      }\n\n      testApifuncDelete = () => {\n        console.log(\"inside the testApifuncDelete function : \")\n        axios.delete(\"http://localhost:8080/\")\n          .then(res => { // then print response status\n            //toast.success('upload success')\n            console.log(\"API : \")\n            console.log(res)\n            console.log(res.data[\"message\"])\n            if(this.DataRetrieved) {\n             this.DataRetrieved.innerHTML = res.data[\"message\"];\n          }\n\n          })\n          .catch(err => { // then print response status\n          //  toast.error('upload fail')\n          console.log(\"fail\")\n          })\n        }\n\n      testApifuncdeleteuser = () => {\n        var name = \"profoak\"\n        console.log(\"inside the testApifuncdeleteuser function : \")\n        axios.post(\"http://localhost:8080/deleteuser\",name)\n          .then(res => { // then print response status\n            //toast.success('upload success')\n            console.log(\"API : \")\n            console.log(res)\n            console.log(res.data[\"message\"])\n            if(this.DataRetrieved) {\n             this.DataRetrieved.innerHTML = res.data[\"message\"];\n          }\n\n          })\n          .catch(err => { // then print response status\n          //  toast.error('upload fail')\n          console.log(\"fail\")\n          })\n        }\n\n        testApifuncinsertimagedata = () => {\n          // send only strings\n          var data = \"profoak,frontend1,frontend2,frontend3\"\n          console.log(\"inside the testApifuncinsertimagedata function : \")\n          axios.post(\"http://localhost:8080/insertimagedata\",data)\n            .then(res => { // then print response status\n              //toast.success('upload success')\n              console.log(\"API message : \")\n              console.log(res)\n              console.log(res.data[\"message\"])\n              if(this.DataRetrieved) {\n               this.DataRetrieved.innerHTML = res.data[\"message\"];\n            }\n\n            })\n            .catch(err => { // then print response status\n            //  toast.error('upload fail')\n            console.log(\"fail\")\n            console.log(err)\n            })\n          }\n\n\n          testApifuncgetimages = () => {\n            // data is going to be the username\n            var data = \"user1\"\n            console.log(\"inside the testApifuncgetimages function : \")\n            axios.post(\"http://localhost:8080/getimages\",data)\n              .then(res => { // then print response status\n                //toast.success('upload success')\n                console.log(\"API : \")\n                console.log(res)\n                console.log(res.data[\"data\"])\n                if(this.DataRetrieved) {\n                 this.DataRetrieved.innerHTML = res.data[\"data\"];\n              }\n\n              })\n              .catch(err => { // then print response status\n              //  toast.error('upload fail')\n              console.log(\"fail\")\n              console.log(err)\n              })\n            }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>TESTING API, check developer tools for console.</h1>\n\n      <pre>\n\n\n\n\n      </pre>\n\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncPost}> CALL POST </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncGet}> CALL GET </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncPut}> CALL PUT </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncDelete}>  CALL DELETE</button>\n\n      <pre>\n\n\n\n\n      </pre>\n\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncinsertimagedata}> CALL insertimagedata </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncgetimages}> CALL getimages </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncdeleteuser}>  DELETE USER (change name in API CALL-incode)</button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifunccheckuser}>  CHECK USER </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncvalidateuser}>  Validate Info </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testpromises1}>  Test promises1 </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testpromises2}>  Test promises2 </button>\n\n      <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n      </div>\n\n    );\n  }\n}\nexport default TestAPI;\n"]},"metadata":{},"sourceType":"module"}