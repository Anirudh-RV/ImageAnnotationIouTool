{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/WorkingArea.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass WorkingArea extends Component {\n  //TODO : ADD INTRODUCTION TO PROJECT\n  constructor() {\n    super();\n\n    this.NextImage = () => {\n      if (this.state.index > this.state.ImageNames.length - 1) {\n        console.log(\"End reached\");\n      } else {\n        this.setState({\n          index: this.state.index + 1\n        });\n        console.log(this.state.ImageNames);\n        console.log(this.state.index);\n\n        if (this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\" + this.state.ImageNames[this.state.index];\n        }\n      }\n    };\n\n    this.PrevImage = () => {\n      if (this.state.index == 1) {\n        console.log(\"End reached\");\n      }\n\n      this.setState({\n        index: this.state.index - 1\n      });\n      console.log(this.state.ImageNames);\n      console.log(this.state.index);\n\n      if (this.ImageTag) {\n        this.ImageTag.src = \"http://localhost:4000/img/\" + this.state.ImageNames[this.state.index];\n      }\n    };\n\n    this.Apifuncgetimages = userName => {\n      // data is going to be the username\n      console.log(\"inside the testApi function : \");\n      axios.post(\"http://localhost:8080/getimages\", userName).then(res => {\n        // then print response status\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"data\"]);\n        var ImageNames = res.data[\"data\"].split(\"</br>\");\n        ImageNames.pop();\n        console.log(ImageNames);\n        console.log(ImageNames[0]);\n        this.state.ImageNames = ImageNames;\n        console.log(\"state var : \");\n        console.log(this.state.ImageNames);\n\n        if (this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\" + ImageNames[0];\n        }\n      }).catch(err => {\n        // then print response status\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      index: 1,\n      ImageNames: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var userName = this.props.name;\n\n    if (this.DataRetrieved) {\n      this.DataRetrieved.innerHTML = userName;\n    } // Call GO API to get all the image names of username\n\n\n    this.Apifuncgetimages(userName);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columnLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Left Side\", React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"name\",\n      ref: c => this.ImageTag = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"columnRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Right Side\", React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.NextImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"NEXT\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.PrevImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"PREVIOUS\")));\n  }\n\n}\n\nexport default WorkingArea;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/WorkingArea.js"],"names":["React","Component","axios","WorkingArea","constructor","NextImage","state","index","ImageNames","length","console","log","setState","ImageTag","src","PrevImage","Apifuncgetimages","userName","post","then","res","data","split","pop","catch","err","componentDidMount","props","name","DataRetrieved","innerHTML","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass WorkingArea extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\nconstructor(){\n  super();\n  this.state= {\n    index:1,\n    ImageNames : \"\"\n  }\n}\n\nNextImage= () => {\n  if(this.state.index>this.state.ImageNames.length-1)\n  {\n    console.log(\"End reached\")\n  }\n  else {\n\n\n  this.setState({\n    index:this.state.index+1\n  })\nconsole.log(this.state.ImageNames)\nconsole.log(this.state.index)\n\n  if(this.ImageTag) {\n   this.ImageTag.src = \"http://localhost:4000/img/\"+this.state.ImageNames[this.state.index];\n}\n}\n}\n\n\nPrevImage= () => {\n  if(this.state.index == 1)\n  {\n    console.log(\"End reached\")\n  }\n  this.setState({\n    index:this.state.index-1\n  })\n\nconsole.log(this.state.ImageNames)\nconsole.log(this.state.index)\n  if(this.ImageTag) {\n   this.ImageTag.src = \"http://localhost:4000/img/\"+this.state.ImageNames[this.state.index];\n}\n}\n\n\nApifuncgetimages = (userName) => {\n  // data is going to be the username\n  console.log(\"inside the testApi function : \")\n  axios.post(\"http://localhost:8080/getimages\",userName)\n    .then(res => { // then print response status\n      console.log(\"API : \")\n      console.log(res)\n      console.log(res.data[\"data\"])\n       var ImageNames = res.data[\"data\"].split(\"</br>\");\n       ImageNames.pop();\n       console.log(ImageNames)\n       console.log(ImageNames[0])\n       this.state.ImageNames = ImageNames\n       console.log(\"state var : \")\n       console.log(this.state.ImageNames)\n         if(this.ImageTag) {\n          this.ImageTag.src = \"http://localhost:4000/img/\"+ImageNames[0];\n       }\n    })\n    .catch(err => { // then print response status\n    console.log(\"fail\")\n    console.log(err)\n    })\n  }\n\ncomponentDidMount(){\n  var userName = this.props.name\n          if(this.DataRetrieved) {\n           this.DataRetrieved.innerHTML = userName\n        }\n\n    // Call GO API to get all the image names of username\n    this.Apifuncgetimages(userName)\n\n\n}\n  render() {\n    return (\n      <div>\n      <div className = \"columnLeft\">\n        Left Side\n        <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n        <img className='name' ref = {c => this.ImageTag = c}/>\n        </div>\n\n        <div className = \"columnRight\">\n      Right Side\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.NextImage}>NEXT</button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.PrevImage}>PREVIOUS</button>\n      </div>\n\n      </div>\n    );\n  }\n}\nexport default WorkingArea;\n"]},"metadata":{},"sourceType":"module"}