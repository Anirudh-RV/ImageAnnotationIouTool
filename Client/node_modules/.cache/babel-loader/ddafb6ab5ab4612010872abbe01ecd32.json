{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/Test_Cookies.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nclass TestAPI extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testcookie = () => {\n      const cookies = new Cookies();\n      cookies.set('username', 'Pacman', {\n        path: '/'\n      });\n      console.log(cookies.get('username'));\n      this.DataRetrieved.innerHTML = cookies.get('username');\n    };\n  }\n\n  //TODO : ADD INTRODUCTION TO PROJECT\n  componentDidMount() {\n    // OnLoad function\n    const cookies = new Cookies();\n\n    if (cookies.get('username')) {\n      this.DataRetrieved.innerHTML = cookies.get('username');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"TESTING Cookies, check developer tools for console.\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testcookie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" CHECK COOKIE \"), React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TestAPI;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/Test_Cookies.js"],"names":["React","Component","axios","Cookies","TestAPI","testcookie","cookies","set","path","console","log","get","DataRetrieved","innerHTML","componentDidMount","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAahCI,UAbgC,GAanB,MAAK;AAChB,YAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,QAAxB,EAAkC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,GAAR,CAAY,UAAZ,CAAZ;AACA,WAAKC,aAAL,CAAmBC,SAAnB,GAA+BP,OAAO,CAACK,GAAR,CAAY,UAAZ,CAA/B;AACD,KAlB+B;AAAA;;AAChC;AAEAG,EAAAA,iBAAiB,GAAE;AACnB;AACE,UAAMR,OAAO,GAAG,IAAIH,OAAJ,EAAhB;;AAEA,QAAGG,OAAO,CAACK,GAAR,CAAY,UAAZ,CAAH,EAA2B;AACzB,WAAKC,aAAL,CAAmBC,SAAnB,GAA+BP,OAAO,CAACK,GAAR,CAAY,UAAZ,CAA/B;AACD;AACF;;AAWCI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAOA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKV,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPA,EASA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAqB,MAAA,GAAG,EAAIW,CAAC,IAAI,KAAKJ,aAAL,GAAqBI,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CADF;AAcD;;AApC6B;;AAsChC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nclass TestAPI extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\ncomponentDidMount(){\n// OnLoad function\n  const cookies = new Cookies()\n\n  if(cookies.get('username')){\n    this.DataRetrieved.innerHTML = cookies.get('username')\n  }\n}\n\n\ntestcookie = () =>{\n  const cookies = new Cookies()\n  cookies.set('username', 'Pacman', { path: '/' })\n  console.log(cookies.get('username'))\n  this.DataRetrieved.innerHTML = cookies.get('username')\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>TESTING Cookies, check developer tools for console.</h1>\n\n      <pre>\n\n      </pre>\n\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testcookie}> CHECK COOKIE </button>\n\n      <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n      </div>\n\n    );\n  }\n}\nexport default TestAPI;\n"]},"metadata":{},"sourceType":"module"}