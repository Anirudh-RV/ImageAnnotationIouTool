{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/TestAPI.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nclass TestAPI extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testpromises = () => {\n      let myFirstPromise = new Promise((resolve, reject) => {\n        // We call resolve(...) when what we were doing asynchronously was successful, and reject(...) when it failed.\n        // In this example, we use setTimeout(...) to simulate async code.\n        // In reality, you will probably be using something like XHR or an HTML5 API.\n        var data = \"Email,anirudh@gmail.com\";\n        console.log(\"inside the testApifuncvalidateuser function : \");\n        axios.post(\"http://localhost:8080/validateinfo\", data).then(res => {\n          // then print response status\n          //toast.success('upload success')\n          console.log(\"API message : \");\n          console.log(res);\n          console.log(res.data[\"message\"]);\n\n          if (this.DataRetrieved) {\n            this.DataRetrieved.innerHTML = res.data[\"message\"];\n          }\n\n          if (res.data[\"message\"] == \"Yes\") {\n            resolve(\"Found!\");\n          } else {\n            reject(\"Not Found!\");\n          }\n        }).catch(err => {\n          // then print response status\n          //  toast.error('upload fail')\n          console.log(\"fail\");\n          console.log(err);\n        });\n      });\n      myFirstPromise.then(successMessage => {\n        // successMessage is whatever we passed in the resolve(...) function above.\n        // It doesn't have to be a string, but if it is only a succeed message, it probably will be.\n        console.log(\"Yay! \" + successMessage);\n        this.DataRetrieved.innerHTML = \"Yay! \" + successMessage;\n      });\n    };\n\n    this.testApifuncvalidateuser = () => {\n      var data = \"Email,anirudh@gmail.com\";\n      console.log(\"inside the testApifuncvalidateuser function : \");\n      axios.post(\"http://localhost:8080/validateinfo\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testApifunccheckuser = () => {\n      var data = \"anirudhrv,password\";\n      console.log(\"inside the testApifunccheckuser function : \");\n      axios.post(\"http://localhost:8080/checkuser\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testApifuncPost = () => {\n      console.log(\"inside the testApifuncPost function : \");\n      axios.post(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncGet = () => {\n      console.log(\"inside the testApifuncGet function : \");\n      axios.get(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncPut = () => {\n      console.log(\"inside the testApifuncPut function : \");\n      axios.put(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncDelete = () => {\n      console.log(\"inside the testApifuncDelete function : \");\n      axios.delete(\"http://localhost:8080/\").then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncdeleteuser = () => {\n      var name = \"profoak\";\n      console.log(\"inside the testApifuncdeleteuser function : \");\n      axios.post(\"http://localhost:8080/deleteuser\", name).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n      });\n    };\n\n    this.testApifuncinsertimagedata = () => {\n      // send only strings\n      var data = \"profoak,frontend1,frontend2,frontend3\";\n      console.log(\"inside the testApifuncinsertimagedata function : \");\n      axios.post(\"http://localhost:8080/insertimagedata\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testApifuncgetimages = () => {\n      // data is going to be the username\n      var data = \"user1\";\n      console.log(\"inside the testApifuncgetimages function : \");\n      axios.post(\"http://localhost:8080/getimages\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \");\n        console.log(res);\n        console.log(res.data[\"data\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"data\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"TESTING API, check developer tools for console.\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \" CALL POST \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncGet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" CALL GET \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncPut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \" CALL PUT \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"  CALL DELETE\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncinsertimagedata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \" CALL insertimagedata \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncgetimages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \" CALL getimages \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncdeleteuser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"  DELETE USER (change name in API CALL-incode)\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifunccheckuser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"  CHECK USER \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testApifuncvalidateuser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"  Validate Info \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testpromises,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"  Test promises \"), React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TestAPI;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/TestAPI.js"],"names":["React","Component","axios","TestAPI","testpromises","myFirstPromise","Promise","resolve","reject","data","console","log","post","then","res","DataRetrieved","innerHTML","catch","err","successMessage","testApifuncvalidateuser","testApifunccheckuser","testApifuncPost","testApifuncGet","get","testApifuncPut","put","testApifuncDelete","delete","testApifuncdeleteuser","name","testApifuncinsertimagedata","testApifuncgetimages","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass TestAPI extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\ntestpromises = () =>{\n\n  let myFirstPromise = new Promise((resolve, reject) => {\n  // We call resolve(...) when what we were doing asynchronously was successful, and reject(...) when it failed.\n  // In this example, we use setTimeout(...) to simulate async code.\n  // In reality, you will probably be using something like XHR or an HTML5 API.\n\n  var data = \"Email,anirudh@gmail.com\"\n  console.log(\"inside the testApifuncvalidateuser function : \")\n  axios.post(\"http://localhost:8080/validateinfo\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n      if(res.data[\"message\"] == \"Yes\"){\n        resolve(\"Found!\")\n      }\n      else{\n        reject(\"Not Found!\")\n      }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n})\n\nmyFirstPromise.then((successMessage) => {\n  // successMessage is whatever we passed in the resolve(...) function above.\n  // It doesn't have to be a string, but if it is only a succeed message, it probably will be.\n  console.log(\"Yay! \" + successMessage)\n  this.DataRetrieved.innerHTML = \"Yay! \"+successMessage;\n});\n\n}\n\ntestApifuncvalidateuser = () =>{\n  var data = \"Email,anirudh@gmail.com\"\n  console.log(\"inside the testApifuncvalidateuser function : \")\n  axios.post(\"http://localhost:8080/validateinfo\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\ntestApifunccheckuser = () =>{\n  var data = \"anirudhrv,password\"\n  console.log(\"inside the testApifunccheckuser function : \")\n  axios.post(\"http://localhost:8080/checkuser\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ntestApifuncPost = () => {\n  console.log(\"inside the testApifuncPost function : \")\n  axios.post(\"http://localhost:8080/\")\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    })\n  }\n\n\n  testApifuncGet = () => {\n    console.log(\"inside the testApifuncGet function : \")\n    axios.get(\"http://localhost:8080/\")\n      .then(res => { // then print response status\n        //toast.success('upload success')\n        console.log(\"API : \")\n        console.log(res)\n        console.log(res.data[\"message\"])\n        if(this.DataRetrieved) {\n         this.DataRetrieved.innerHTML = res.data[\"message\"];\n      }\n\n      })\n      .catch(err => { // then print response status\n      //  toast.error('upload fail')\n      console.log(\"fail\")\n      })\n    }\n\n\n    testApifuncPut = () => {\n      console.log(\"inside the testApifuncPut function : \")\n      axios.put(\"http://localhost:8080/\")\n        .then(res => { // then print response status\n          //toast.success('upload success')\n          console.log(\"API : \")\n          console.log(res)\n          console.log(res.data[\"message\"])\n          if(this.DataRetrieved) {\n           this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n\n        })\n        .catch(err => { // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\")\n        })\n      }\n\n      testApifuncDelete = () => {\n        console.log(\"inside the testApifuncDelete function : \")\n        axios.delete(\"http://localhost:8080/\")\n          .then(res => { // then print response status\n            //toast.success('upload success')\n            console.log(\"API : \")\n            console.log(res)\n            console.log(res.data[\"message\"])\n            if(this.DataRetrieved) {\n             this.DataRetrieved.innerHTML = res.data[\"message\"];\n          }\n\n          })\n          .catch(err => { // then print response status\n          //  toast.error('upload fail')\n          console.log(\"fail\")\n          })\n        }\n\n      testApifuncdeleteuser = () => {\n        var name = \"profoak\"\n        console.log(\"inside the testApifuncdeleteuser function : \")\n        axios.post(\"http://localhost:8080/deleteuser\",name)\n          .then(res => { // then print response status\n            //toast.success('upload success')\n            console.log(\"API : \")\n            console.log(res)\n            console.log(res.data[\"message\"])\n            if(this.DataRetrieved) {\n             this.DataRetrieved.innerHTML = res.data[\"message\"];\n          }\n\n          })\n          .catch(err => { // then print response status\n          //  toast.error('upload fail')\n          console.log(\"fail\")\n          })\n        }\n\n        testApifuncinsertimagedata = () => {\n          // send only strings\n          var data = \"profoak,frontend1,frontend2,frontend3\"\n          console.log(\"inside the testApifuncinsertimagedata function : \")\n          axios.post(\"http://localhost:8080/insertimagedata\",data)\n            .then(res => { // then print response status\n              //toast.success('upload success')\n              console.log(\"API message : \")\n              console.log(res)\n              console.log(res.data[\"message\"])\n              if(this.DataRetrieved) {\n               this.DataRetrieved.innerHTML = res.data[\"message\"];\n            }\n\n            })\n            .catch(err => { // then print response status\n            //  toast.error('upload fail')\n            console.log(\"fail\")\n            console.log(err)\n            })\n          }\n\n\n          testApifuncgetimages = () => {\n            // data is going to be the username\n            var data = \"user1\"\n            console.log(\"inside the testApifuncgetimages function : \")\n            axios.post(\"http://localhost:8080/getimages\",data)\n              .then(res => { // then print response status\n                //toast.success('upload success')\n                console.log(\"API : \")\n                console.log(res)\n                console.log(res.data[\"data\"])\n                if(this.DataRetrieved) {\n                 this.DataRetrieved.innerHTML = res.data[\"data\"];\n              }\n\n              })\n              .catch(err => { // then print response status\n              //  toast.error('upload fail')\n              console.log(\"fail\")\n              console.log(err)\n              })\n            }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>TESTING API, check developer tools for console.</h1>\n\n      <pre>\n\n\n\n\n      </pre>\n\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncPost}> CALL POST </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncGet}> CALL GET </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncPut}> CALL PUT </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncDelete}>  CALL DELETE</button>\n\n      <pre>\n\n\n\n\n      </pre>\n\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncinsertimagedata}> CALL insertimagedata </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncgetimages}> CALL getimages </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncdeleteuser}>  DELETE USER (change name in API CALL-incode)</button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifunccheckuser}>  CHECK USER </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testApifuncvalidateuser}>  Validate Info </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testpromises}>  Test promises </button>\n\n      <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n      </div>\n\n    );\n  }\n}\nexport default TestAPI;\n"]},"metadata":{},"sourceType":"module"}