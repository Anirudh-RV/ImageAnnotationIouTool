{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/TestNodeAPI.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nclass TestAPI extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tesnodeapi = () => {\n      var data = {\n        'username': 'anirudhrv',\n        'imagename': 'scrib.jpeg',\n        'imagedata': \"something in text here\"\n      };\n      console.log(\"inside the testdjangoapi function : \");\n      axios.post(\"http://192.168.1.8:4000/saveastextfile/\", {\n        body: JSON.stringify({\n          user: {\n            name: \"John\",\n            email: \"john@example.com\"\n          }\n        })\n      }).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testnodeapi2 = () => {\n      fetch('http://192.168.1.8:4000/saveastextfile/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            name: \"John\",\n            email: \"john@example.com\"\n          }\n        })\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"TESTING API TO NODE, check developer tools for console.\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.tesnodeapi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" TEST API TO NODE \"), React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TestAPI;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/TestNodeAPI.js"],"names":["React","Component","axios","TestAPI","tesnodeapi","data","console","log","post","body","JSON","stringify","user","name","email","then","res","DataRetrieved","innerHTML","catch","err","testnodeapi2","fetch","method","headers","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAIhCG,UAJgC,GAInB,MAAK;AAChB,UAAIC,IAAI,GAAG;AAAC,oBAAW,WAAZ;AAAwB,qBAAY,YAApC;AAAiD,qBAAY;AAA7D,OAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAL,MAAAA,KAAK,CAACM,IAAN,CAAW,yCAAX,EAAqD;AACnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,MADJ;AAEFC,YAAAA,KAAK,EAAE;AAFL;AADW,SAAf;AAD6C,OAArD,EAQGC,IARH,CAQQC,GAAG,IAAI;AAAE;AACb;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACX,IAAJ,CAAS,SAAT,CAAZ;;AACA,YAAG,KAAKY,aAAR,EAAuB;AACtB,eAAKA,aAAL,CAAmBC,SAAnB,GAA+BF,GAAG,CAACX,IAAJ,CAAS,SAAT,CAA/B;AACF;AAEA,OAjBH,EAkBGc,KAlBH,CAkBSC,GAAG,IAAI;AAAE;AAChB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACC,OAtBH;AAuBD,KA9B+B;;AAAA,SAgChCC,YAhCgC,GAgCjB,MAAK;AACpBC,MAAAA,KAAK,CAAC,yCAAD,EAA2C;AAC5CC,QAAAA,MAAM,EAAE,MADoC;AAE5CC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFmC;AAK5Cf,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE,MADJ;AAEFC,YAAAA,KAAK,EAAE;AAFL;AADW,SAAf;AALsC,OAA3C,CAAL;AAYC,KA7C+B;AAAA;;AA8C9BW,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAOA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,2BAA5B;AAAwD,MAAA,OAAO,EAAE,KAAKrB,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPA,EASA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAqB,MAAA,GAAG,EAAIsB,CAAC,IAAI,KAAKT,aAAL,GAAqBS,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CADF;AAcD;;AA7D6B;;AA+DhC,eAAevB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass TestAPI extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\n\ntesnodeapi = () =>{\n  var data = {'username':'anirudhrv','imagename':'scrib.jpeg','imagedata':\"something in text here\"}\n  console.log(\"inside the testdjangoapi function : \")\n  axios.post(\"http://192.168.1.8:4000/saveastextfile/\",{\n    body: JSON.stringify({\n        user: {\n            name: \"John\",\n            email: \"john@example.com\"\n        }\n    })\n  })\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ntestnodeapi2 = () =>{\nfetch('http://192.168.1.8:4000/saveastextfile/',{\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        user: {\n            name: \"John\",\n            email: \"john@example.com\"\n        }\n    })\n});\n}\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>TESTING API TO NODE, check developer tools for console.</h1>\n\n      <pre>\n\n      </pre>\n\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.tesnodeapi}> TEST API TO NODE </button>\n\n      <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n      </div>\n\n    );\n  }\n}\nexport default TestAPI;\n"]},"metadata":{},"sourceType":"module"}