{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/SignUp.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Bootstrap from \"react-bootstrap\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport IntroBar from './IntroBar';\nimport axios from 'axios';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.len = checkvar => {\n      return checkvar.length;\n    };\n\n    this.validateEmail = email => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    };\n\n    this.checkforexistingEmail = (field, value) => {\n      var data = field + \",\" + value;\n      console.log(\"inside the checkforexistingEmail function : \");\n      axios.post(\"http://localhost:8080/validateinfo\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.handleEmail = (email, flag) => {\n      if (this.validateEmail(email)) {\n        this.emailError.innerHTML = \"\"; // check for exisiting emailId\n      } else {\n        flag = false;\n        console.log(\"Email Error\");\n        this.emailError.innerHTML = \"Invalid emailId\";\n      }\n\n      return flag;\n    };\n\n    this.handleuserName = (username, flag) => {\n      if (this.len(username) >= 4) {\n        this.userNameError.innerHTML = \"\";\n      } else {\n        flag = false;\n        console.log(\"userName Error\");\n        this.userNameError.innerHTML = \"Invalid Username\";\n      }\n\n      return flag;\n    };\n\n    this.handlefullName = (fullname, flag) => {\n      if (this.len(fullname) != 0) {\n        this.fullNameError.innerHTML = \"\";\n        console.log(this.len(fullname));\n      } else {\n        flag = false;\n        console.log(\"fullName Error\");\n        this.fullNameError.innerHTML = \"Please fill your name\";\n      }\n\n      return flag;\n    };\n\n    this.handlePassword = (password, flag) => {\n      if (this.len(password) >= 6) {\n        this.PasswordError.innerHTML = \"\";\n        console.log(this.len(password));\n      } else {\n        flag = false;\n        console.log(\"fullName Error\");\n        this.PasswordError.innerHTML = \"Password too weak\";\n      }\n\n      return flag;\n    };\n\n    this.handleSubmit = () => {\n      var email = this.emailId.value;\n      var username = this.userName.value;\n      var fullname = this.fullName.value;\n      var password = this.Password.value;\n      var flag = true; // validating email\n\n      flag = this.handleEmail(email, flag); // validating username\n\n      flag = this.handleuserName(username, flag); // validating fullName\n\n      flag = this.handlefullName(fullname, flag); // validating passWord\n\n      flag = this.handlePassword(password, flag);\n\n      if (flag) {\n        // allow to pass through the API\n        this.checkforexistingvalues(\"Email\", email, 1);\n        this.checkforexistingvalues(\"UserName\", username, 2);\n      } else {\n        // show error (do nothing)\n        console.log(\"invalid entry\");\n      }\n    };\n  }\n\n  //TODO : ADD Footer information\n  componentDidMount() {\n    // OnLoad function\n    this.accountexists = false;\n    this.userNameExists = false;\n    this.handleEmail.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"BackgroundSign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"AppName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"End-to-end data curation and annotation platform\"), React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"SignInHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"X-P1\"), React.createElement(\"p\", {\n      class: \"SignUpHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Sign up to make data collection and image annotation easier.\"), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      autoFocus: true,\n      placeholder: \"Email\",\n      ref: c => this.emailId = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.emailError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"Username\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      autoFocus: true,\n      placeholder: \"Username\",\n      ref: c => this.userName = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.userNameError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"Name\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      autoFocus: true,\n      placeholder: \"Full Name\",\n      ref: c => this.fullName = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.fullNameError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Password\",\n      ref: c => this.Password = c,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.PasswordError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      onClick: this.handleSubmit,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"p\", {\n      class: \"Terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"By signing up, you agree to our Terms , Data Policy and Cookies Policy .\"))), React.createElement(\"div\", {\n      className: \"SecondBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"LinkToAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"  Have an account?\\xA0\", React.createElement(Link, {\n      className: \"LinkToSignIn\",\n      to: \"./signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Log in\"))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/SignUp.js"],"names":["React","Component","Form","Button","Bootstrap","FormGroup","FormControl","Link","IntroBar","axios","SignUp","len","checkvar","length","validateEmail","email","re","test","checkforexistingEmail","field","value","data","console","log","post","then","res","DataRetrieved","innerHTML","catch","err","handleEmail","flag","emailError","handleuserName","username","userNameError","handlefullName","fullname","fullNameError","handlePassword","password","PasswordError","handleSubmit","emailId","userName","fullName","Password","checkforexistingvalues","componentDidMount","accountexists","userNameExists","bind","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Bootstrap from \"react-bootstrap\";\nimport {FormGroup, FormControl} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport IntroBar from './IntroBar';\nimport axios from 'axios';\n\nclass SignUp extends Component {\n//TODO : ADD Footer information\n\ncomponentDidMount(){\n// OnLoad function\nthis.accountexists = false;\nthis.userNameExists = false;\nthis.handleEmail.bind(this);\n}\n\nlen = (checkvar) => {\n  return checkvar.length;\n}\n\nvalidateEmail = (email) => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\ncheckforexistingEmail = (field,value) =>{\n  var data = field+\",\"+value;\n  console.log(\"inside the checkforexistingEmail function : \")\n  axios.post(\"http://localhost:8080/validateinfo\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\nhandleEmail = (email,flag) => {\n  if(this.validateEmail(email)){\n  this.emailError.innerHTML = \"\";\n\n  // check for exisiting emailId\n  }\n  else{\n    flag = false;\n    console.log(\"Email Error\");\n    this.emailError.innerHTML = \"Invalid emailId\";\n  }\n  return flag;\n}\n\nhandleuserName = (username,flag) => {\n  if(this.len(username)>=4){\n  this.userNameError.innerHTML = \"\";\n  }\n  else{\n    flag = false;\n    console.log(\"userName Error\");\n    this.userNameError.innerHTML = \"Invalid Username\";\n  }\n  return flag;\n}\n\nhandlefullName = (fullname,flag) => {\n  if(this.len(fullname)!=0){\n  this.fullNameError.innerHTML = \"\";\n  console.log(this.len(fullname));\n  }\n  else{\n    flag = false;\n    console.log(\"fullName Error\");\n    this.fullNameError.innerHTML = \"Please fill your name\";\n  }\n  return flag;\n}\n\nhandlePassword = (password,flag) => {\n  if(this.len(password)>=6){\n  this.PasswordError.innerHTML = \"\";\n  console.log(this.len(password));\n  }\n  else{\n    flag = false;\n    console.log(\"fullName Error\");\n    this.PasswordError.innerHTML = \"Password too weak\";\n  }\n  return flag;\n}\n\n\nhandleSubmit = () =>{\n\n  var email = this.emailId.value;\n  var username = this.userName.value;\n  var fullname = this.fullName.value;\n  var password = this.Password.value;\n  var flag = true;\n\n\n// validating email\n  flag = this.handleEmail(email,flag);\n\n// validating username\n  flag = this.handleuserName(username,flag);\n\n// validating fullName\n  flag = this.handlefullName(fullname,flag);\n\n// validating passWord\n  flag = this.handlePassword(password,flag);\n\n  if(flag){\n    // allow to pass through the API\n    this.checkforexistingvalues(\"Email\",email,1);\n    this.checkforexistingvalues(\"UserName\",username,2);\n  }\n  else{\n    // show error (do nothing)\n    console.log(\"invalid entry\");\n  }\n\n}\n\n  render() {\n    return (\n      <div className = \"BackgroundSign\">\n      <h1 className = \"AppName\" >End-to-end data curation and annotation platform</h1>\n\n      <div className=\"Login\">\n        <form>\n        <p class = \"SignInHead\">X-P1</p>\n        <p class = \"SignUpHead\">Sign up to make data collection and image annotation easier.</p>\n\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <FormControl\n            autoFocus\n            placeholder=\"Email\"\n            ref = {c => this.emailId = c}\n          />\n        </FormGroup>\n\n        <p className = \"ErrorMessage\" ref = {c => this.emailError = c}></p>\n\n        <FormGroup controlId=\"Username\" bsSize=\"large\">\n          <FormControl\n            autoFocus\n            placeholder=\"Username\"\n            ref = {c => this.userName = c}\n          />\n        </FormGroup>\n\n        <p className = \"ErrorMessage\" ref = {c => this.userNameError = c}></p>\n\n        <FormGroup controlId=\"Name\" bsSize=\"large\">\n          <FormControl\n            autoFocus\n            placeholder=\"Full Name\"\n            ref = {c => this.fullName = c}\n          />\n        </FormGroup>\n\n        <p className = \"ErrorMessage\" ref = {c => this.fullNameError = c}></p>\n\n\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <FormControl\n              placeholder=\"Password\"\n              ref = {c => this.Password = c}\n              type=\"password\"\n          />\n\n          <p className = \"ErrorMessage\" ref = {c => this.PasswordError = c}></p>\n\n\n        </FormGroup>\n          <Button block bsSize=\"large\" onClick={this.handleSubmit} type=\"button\">\n            Sign up\n          </Button>\n\n          <p class = \"Terms\">By signing up, you agree to our Terms , Data Policy and Cookies Policy .</p>\n        </form>\n      </div>\n\n      <div className=\"SecondBox\">\n\n        <p className = \"LinkToAccount\">  Have an account?&nbsp;\n          <Link className=\"LinkToSignIn\" to = './signin'>Log in</Link>\n        </p>\n      </div>\n      </div>\n    );\n  }\n}\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}