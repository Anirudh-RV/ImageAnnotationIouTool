{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/SignUp.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Bootstrap from \"react-bootstrap\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport IntroBar from './IntroBar';\nimport axios from 'axios';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.signupUser = () => {\n      var email = this.emailId.value;\n      var username = this.userName.value;\n      var fullname = this.fullName.value;\n      var password = this.Password.value;\n      console.log(\"\\n\" + email + \"\\n\" + username + \"\\n\" + fullname + \"\\n\" + password + \"\\n\");\n      console.log(\"Calling GO API at 8080 : \");\n      var data = email + \",\" + username + \",\" + fullname + \",\" + password;\n      axios.post(\"http://192.168.1.8:8080/addusertodatabase\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(\"result : \" + res.data[\"message\"]);\n        const cookies = new Cookies();\n        cookies.set('username', this.usercredentials.value, {\n          path: '/'\n        });\n        console.log(cookies.get('username')); // redirect to CustomRouting with data\n\n        this.props.history.push({\n          pathname: '/customrouting',\n          state: {\n            usercredentials: username,\n            checkval: res.data[\"message\"]\n          }\n        });\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.len = checkvar => {\n      return checkvar.length;\n    };\n\n    this.validateEmail = email => {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    };\n\n    this.checkforexistingUsername = (field, value) => {\n      var data = field + \",\" + value;\n      console.log(\"Calling GO API at 8080 : \");\n      axios.post(\"http://192.168.1.8:8080/validateinfo\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(\"result : \" + res.data[\"message\"]);\n\n        if (res.data[\"message\"] == \"Yes\") {\n          // existing emailID\n          this.userNameError.innerHTML = \"UserName already taken, please try another.\";\n        } else {\n          // EmailID,UserName,FullName,Password : good\n          // call signupUser\n          this.signupUser();\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.checkforexistingEmail = (field, value, username) => {\n      var data = field + \",\" + value;\n      console.log(\"Calling GO API at 8080 : \");\n      axios.post(\"http://192.168.1.8:8080/validateinfo\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(\"result : \" + res.data[\"message\"]);\n\n        if (res.data[\"message\"] == \"Yes\") {\n          // existing emailID\n          this.emailError.innerHTML = \"Already existing email, do you want to login?\";\n        } else {\n          // EmailID is good, check for UserName\n          this.checkforexistingUsername(\"username\", username);\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.handleEmail = (email, flag) => {\n      if (this.validateEmail(email)) {\n        this.emailError.innerHTML = \"\"; // check for exisiting emailId\n      } else {\n        flag = false;\n        console.log(\"Email Error\");\n        this.emailError.innerHTML = \"Invalid emailId\";\n      }\n\n      return flag;\n    };\n\n    this.handleuserName = (username, flag) => {\n      if (this.len(username) >= 4) {\n        this.userNameError.innerHTML = \"\";\n      } else {\n        flag = false;\n        console.log(\"userName Error\");\n        this.userNameError.innerHTML = \"Invalid Username\";\n      }\n\n      return flag;\n    };\n\n    this.handlefullName = (fullname, flag) => {\n      if (this.len(fullname) != 0) {\n        this.fullNameError.innerHTML = \"\";\n        console.log(this.len(fullname));\n      } else {\n        flag = false;\n        console.log(\"fullName Error\");\n        this.fullNameError.innerHTML = \"Please fill your name\";\n      }\n\n      return flag;\n    };\n\n    this.handlePassword = (password, flag) => {\n      if (this.len(password) >= 6) {\n        this.PasswordError.innerHTML = \"\";\n        console.log(this.len(password));\n      } else {\n        flag = false;\n        console.log(\"fullName Error\");\n        this.PasswordError.innerHTML = \"Password too weak\";\n      }\n\n      return flag;\n    };\n\n    this.handleSubmit = () => {\n      var email = this.emailId.value;\n      var username = this.userName.value;\n      var fullname = this.fullName.value;\n      var password = this.Password.value;\n      var flag = true; // validating email\n\n      flag = this.handleEmail(email, flag); // validating username\n\n      flag = this.handleuserName(username, flag); // validating fullName\n\n      flag = this.handlefullName(fullname, flag); // validating passWord\n\n      flag = this.handlePassword(password, flag);\n\n      if (flag) {\n        // allow to pass through the API\n        this.checkforexistingEmail(\"email\", email, username);\n      } else {\n        // show error (do nothing)\n        console.log(\"invalid entry\");\n      }\n    };\n  }\n\n  //TODO : ADD Footer information\n  componentDidMount() {\n    // OnLoad function\n    this.accountexists = false;\n    this.userNameExists = false;\n    this.handleEmail.bind(this);\n  } //addusertodatabase\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"BackgroundSign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"AppName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"End-to-end data curation and annotation platform\"), React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"SignInHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"X-P1\"), React.createElement(\"p\", {\n      class: \"SignUpHead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Sign up to make data collection and image annotation easier.\"), React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      autoFocus: true,\n      placeholder: \"Email\",\n      ref: c => this.emailId = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.emailError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"Username\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      autoFocus: true,\n      placeholder: \"Username\",\n      ref: c => this.userName = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.userNameError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"Name\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      autoFocus: true,\n      placeholder: \"Full Name\",\n      ref: c => this.fullName = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.fullNameError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Password\",\n      ref: c => this.Password = c,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"ErrorMessage\",\n      ref: c => this.PasswordError = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      onClick: this.handleSubmit,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"p\", {\n      class: \"Terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"By signing up, you agree to our Terms , Data Policy and Cookies Policy .\"))), React.createElement(\"div\", {\n      className: \"SecondBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"LinkToAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"  Have an account?\\xA0\", React.createElement(Link, {\n      className: \"LinkToSignIn\",\n      to: \"./signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Log in\"))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/InteractiveImageAnnotation/Application/ImageAnnotation/Client/src/SPA_components/SignUp.js"],"names":["React","Component","Form","Button","Bootstrap","FormGroup","FormControl","Link","IntroBar","axios","SignUp","signupUser","email","emailId","value","username","userName","fullname","fullName","password","Password","console","log","data","post","then","res","cookies","Cookies","set","usercredentials","path","get","props","history","push","pathname","state","checkval","catch","err","len","checkvar","length","validateEmail","re","test","checkforexistingUsername","field","userNameError","innerHTML","checkforexistingEmail","emailError","handleEmail","flag","handleuserName","handlefullName","fullNameError","handlePassword","PasswordError","handleSubmit","componentDidMount","accountexists","userNameExists","bind","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Bootstrap from \"react-bootstrap\";\nimport {FormGroup, FormControl} from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport IntroBar from './IntroBar';\nimport axios from 'axios';\n\nclass SignUp extends Component {\n//TODO : ADD Footer information\n\ncomponentDidMount(){\n// OnLoad function\nthis.accountexists = false;\nthis.userNameExists = false;\nthis.handleEmail.bind(this);\n}\n\n//addusertodatabase\n\nsignupUser = () =>{\n    var email = this.emailId.value;\n    var username = this.userName.value;\n    var fullname = this.fullName.value;\n    var password = this.Password.value;\n    console.log(\"\\n\"+email+\"\\n\"+username+\"\\n\"+fullname+\"\\n\"+password+\"\\n\")\n    console.log(\"Calling GO API at 8080 : \")\n    var data = email+\",\"+username+\",\"+fullname+\",\"+password\n    axios.post(\"http://192.168.1.8:8080/addusertodatabase\",data)\n      .then(res => { // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \")\n        console.log(res)\n        console.log(\"result : \"+res.data[\"message\"])\n\n        const cookies = new Cookies()\n        cookies.set('username',this.usercredentials.value, { path: '/' })\n        console.log(cookies.get('username'))\n        \n        // redirect to CustomRouting with data\n        this.props.history.push({\n          pathname: '/customrouting',\n          state: {usercredentials: username,checkval : res.data[\"message\"]}\n      })\n      })\n      .catch(err => { // then print response status\n      //  toast.error('upload fail')\n      console.log(\"fail\")\n      console.log(err)\n      })\n\n}\nlen = (checkvar) => {\n  return checkvar.length;\n}\n\nvalidateEmail = (email) => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\ncheckforexistingUsername = (field,value) =>{\n  var data = field+\",\"+value;\n  console.log(\"Calling GO API at 8080 : \")\n  axios.post(\"http://192.168.1.8:8080/validateinfo\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(\"result : \"+res.data[\"message\"])\n      if(res.data[\"message\"] == \"Yes\"){\n        // existing emailID\n        this.userNameError.innerHTML = \"UserName already taken, please try another.\";\n      }\n      else{\n        // EmailID,UserName,FullName,Password : good\n        // call signupUser\n        this.signupUser();\n\n      }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ncheckforexistingEmail = (field,value,username) =>{\n  var data = field+\",\"+value;\n  console.log(\"Calling GO API at 8080 : \")\n  axios.post(\"http://192.168.1.8:8080/validateinfo\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(\"result : \"+res.data[\"message\"])\n      if(res.data[\"message\"] == \"Yes\"){\n        // existing emailID\n        this.emailError.innerHTML = \"Already existing email, do you want to login?\";\n      }\n      else{\n        // EmailID is good, check for UserName\n        this.checkforexistingUsername(\"username\",username);\n      }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\nhandleEmail = (email,flag) => {\n  if(this.validateEmail(email)){\n  this.emailError.innerHTML = \"\";\n\n  // check for exisiting emailId\n  }\n  else{\n    flag = false;\n    console.log(\"Email Error\");\n    this.emailError.innerHTML = \"Invalid emailId\";\n  }\n  return flag;\n}\n\nhandleuserName = (username,flag) => {\n  if(this.len(username)>=4){\n  this.userNameError.innerHTML = \"\";\n  }\n  else{\n    flag = false;\n    console.log(\"userName Error\");\n    this.userNameError.innerHTML = \"Invalid Username\";\n  }\n  return flag;\n}\n\nhandlefullName = (fullname,flag) => {\n  if(this.len(fullname)!=0){\n  this.fullNameError.innerHTML = \"\";\n  console.log(this.len(fullname));\n  }\n  else{\n    flag = false;\n    console.log(\"fullName Error\");\n    this.fullNameError.innerHTML = \"Please fill your name\";\n  }\n  return flag;\n}\n\nhandlePassword = (password,flag) => {\n  if(this.len(password)>=6){\n  this.PasswordError.innerHTML = \"\";\n  console.log(this.len(password));\n  }\n  else{\n    flag = false;\n    console.log(\"fullName Error\");\n    this.PasswordError.innerHTML = \"Password too weak\";\n  }\n  return flag;\n}\n\n\nhandleSubmit = () =>{\n\n  var email = this.emailId.value;\n  var username = this.userName.value;\n  var fullname = this.fullName.value;\n  var password = this.Password.value;\n  var flag = true;\n\n\n// validating email\n  flag = this.handleEmail(email,flag);\n\n// validating username\n  flag = this.handleuserName(username,flag);\n\n// validating fullName\n  flag = this.handlefullName(fullname,flag);\n\n// validating passWord\n  flag = this.handlePassword(password,flag);\n\n  if(flag){\n    // allow to pass through the API\n    this.checkforexistingEmail(\"email\",email,username);\n  }\n  else{\n    // show error (do nothing)\n    console.log(\"invalid entry\");\n  }\n\n}\n\n  render() {\n    return (\n      <div className = \"BackgroundSign\">\n      <h1 className = \"AppName\" >End-to-end data curation and annotation platform</h1>\n\n      <div className=\"Login\">\n        <form>\n        <p class = \"SignInHead\">X-P1</p>\n        <p class = \"SignUpHead\">Sign up to make data collection and image annotation easier.</p>\n\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <FormControl\n            autoFocus\n            placeholder=\"Email\"\n            ref = {c => this.emailId = c}\n          />\n        </FormGroup>\n\n        <p className = \"ErrorMessage\" ref = {c => this.emailError = c}></p>\n\n        <FormGroup controlId=\"Username\" bsSize=\"large\">\n          <FormControl\n            autoFocus\n            placeholder=\"Username\"\n            ref = {c => this.userName = c}\n          />\n        </FormGroup>\n\n        <p className = \"ErrorMessage\" ref = {c => this.userNameError = c}></p>\n\n        <FormGroup controlId=\"Name\" bsSize=\"large\">\n          <FormControl\n            autoFocus\n            placeholder=\"Full Name\"\n            ref = {c => this.fullName = c}\n          />\n        </FormGroup>\n\n        <p className = \"ErrorMessage\" ref = {c => this.fullNameError = c}></p>\n\n\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <FormControl\n              placeholder=\"Password\"\n              ref = {c => this.Password = c}\n              type=\"password\"\n          />\n\n          <p className = \"ErrorMessage\" ref = {c => this.PasswordError = c}></p>\n\n\n        </FormGroup>\n          <Button block bsSize=\"large\" onClick={this.handleSubmit} type=\"button\">\n            Sign up\n          </Button>\n\n          <p class = \"Terms\">By signing up, you agree to our Terms , Data Policy and Cookies Policy .</p>\n        </form>\n      </div>\n\n      <div className=\"SecondBox\">\n\n        <p className = \"LinkToAccount\">  Have an account?&nbsp;\n          <Link className=\"LinkToSignIn\" to = './signin'>Log in</Link>\n        </p>\n      </div>\n      </div>\n    );\n  }\n}\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}